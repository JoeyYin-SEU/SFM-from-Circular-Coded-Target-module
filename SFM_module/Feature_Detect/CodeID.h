#ifndef CODEID_H
#define CODEID_H
enum DetectContoursMethod
{
	Sobel_Method = 0,
	CANNY_Method = 1,
	Prewitt_Method = 2,
	Roberts_Method = 3,
	Log_Method = 4,
	Zerocross_Method = 5,
	OTSU_Method = 6,
	ADAPTIVE_THRESH_Method = 7,
	Block_OTSU = 8,
};
enum SubPixelPosMethod
{
	NoSubPixel_Match = 0,                        //不做亚像素定位
	Interpolation_Ellipse_Match = 1,            //二项式插值
	Interpolation_Rotaion_Ellipse_Match = 2,    //二项式插值（坐标旋转）
	Gauss_surface_fit_Ellipse_Match = 3,       //高斯曲面拟合
	Surface_fit_Ellipse_Match = 4,             //曲面拟合，沿梯度方向三次多项式拟合
	Gauss_Curve_Fit = 5,                      //高斯曲线拟合梯度方向//在用，c
	Gray_Moment = 6,                          //灰度矩方法，一维连续函数前3阶灰度矩

	Binary_Centroid = 7,                      //二值化重心法，形心法
	Gray_Centroid = 8,                        //重心法
	Squared_Gray_Centroid = 9,               //灰度平方重心法
};

//用于生成编码点的虚假id值
static int static_15_8_code_id_false[429] = {
	255,
	383,
	639,
	1151,
	2175,
	4223,
	8319,
	447,
	703,
	1215,
	2239,
	4287,
	8383,
	831,
	1343,
	2367,
	4415,
	8511,
	1599,
	2623,
	4671,
	8767,
	3135,
	5183,
	9279,
	6207,
	10303,
	12351,
	479,
	735,
	1247,
	2271,
	4319,
	8415,
	863,
	1375,
	2399,
	4447,
	8543,
	1631,
	2655,
	4703,
	8799,
	3167,
	5215,
	9311,
	6239,
	10335,
	12383,
	927,
	1439,
	2463,
	4511,
	8607,
	1695,
	2719,
	4767,
	8863,
	3231,
	5279,
	9375,
	6303,
	10399,
	12447,
	1823,
	2847,
	4895,
	8991,
	3359,
	5407,
	9503,
	6431,
	10527,
	12575,
	3615,
	5663,
	9759,
	6687,
	10783,
	12831,
	7199,
	11295,
	13343,
	14367,
	495,
	751,
	1263,
	2287,
	4335,
	8431,
	879,
	1391,
	2415,
	4463,
	8559,
	1647,
	2671,
	4719,
	8815,
	3183,
	5231,
	9327,
	6255,
	10351,
	12399,
	943,
	1455,
	2479,
	4527,
	8623,
	1711,
	2735,
	4783,
	8879,
	3247,
	5295,
	9391,
	6319,
	10415,
	12463,
	1839,
	2863,
	4911,
	9007,
	3375,
	5423,
	9519,
	6447,
	10543,
	12591,
	3631,
	5679,
	9775,
	6703,
	10799,
	12847,
	7215,
	11311,
	13359,
	14383,
	975,
	1487,
	2511,
	4559,
	8655,
	1743,
	2767,
	4815,
	8911,
	3279,
	5327,
	9423,
	6351,
	10447,
	12495,
	1871,
	2895,
	4943,
	9039,
	3407,
	5455,
	9551,
	6479,
	10575,
	12623,
	3663,
	5711,
	9807,
	6735,
	10831,
	12879,
	7247,
	11343,
	13391,
	14415,
	1935,
	2959,
	5007,
	9103,
	3471,
	5519,
	9615,
	6543,
	10639,
	12687,
	3727,
	5775,
	9871,
	6799,
	10895,
	12943,
	7311,
	11407,
	13455,
	14479,
	5903,
	9999,
	6927,
	11023,
	13071,
	7439,
	11535,
	13583,
	14607,
	11791,
	13839,
	14863,
	887,
	1399,
	2423,
	4471,
	8567,
	1655,
	2679,
	4727,
	8823,
	3191,
	5239,
	9335,
	6263,
	10359,
	12407,
	951,
	1463,
	2487,
	4535,
	8631,
	1719,
	2743,
	4791,
	8887,
	3255,
	5303,
	9399,
	6327,
	10423,
	12471,
	1847,
	2871,
	4919,
	9015,
	3383,
	5431,
	9527,
	6455,
	10551,
	12599,
	3639,
	5687,
	9783,
	6711,
	10807,
	12855,
	7223,
	11319,
	13367,
	1495,
	2519,
	4567,
	8663,
	1751,
	2775,
	4823,
	8919,
	3287,
	5335,
	9431,
	6359,
	10455,
	12503,
	1879,
	2903,
	4951,
	9047,
	3415,
	5463,
	9559,
	6487,
	10583,
	12631,
	3671,
	5719,
	9815,
	6743,
	10839,
	12887,
	7255,
	11351,
	13399,
	2967,
	5015,
	9111,
	3479,
	5527,
	9623,
	6551,
	10647,
	12695,
	3735,
	5783,
	9879,
	6807,
	10903,
	12951,
	7319,
	11415,
	13463,
	10007,
	6935,
	11031,
	13079,
	7447,
	11543,
	13591,
	13847,
	3303,
	5351,
	9447,
	6375,
	10471,
	12519,
	1895,
	2919,
	4967,
	9063,
	3431,
	5479,
	9575,
	6503,
	10599,
	12647,
	3687,
	5735,
	9831,
	6759,
	10855,
	12903,
	11367,
	13415,
	5031,
	9127,
	3495,
	5543,
	9639,
	6567,
	10663,
	12711,
	3751,
	5799,
	9895,
	6823,
	10919,
	12967,
	11431,
	13479,
	6951,
	11047,
	13095,
	11559,
	13607,
	13863,
	12743,
	5831,
	9927,
	6855,
	10951,
	12999,
	11463,
	13511,
	6983,
	11079,
	13127,
	11591,
	13639,
	13895,
	11655,
	13703,
	13959,
	1755,
	2779,
	4827,
	8923,
	3291,
	5339,
	9435,
	6363,
	10459,
	2907,
	4955,
	9051,
	3419,
	5467,
	9563,
	6491,
	10587,
	5723,
	9819,
	6747,
	10843,
	11355,
	3483,
	5531,
	9627,
	6555,
	10651,
	5787,
	9883,
	6811,
	10907,
	11419,
	11035,
	11547,
	3435,
	5483,
	9579,
	6507,
	10603,
	5739,
	9835,
	6763,
	10859,
	5547,
	9643,
	6571,
	10667,
	5803,
	9899,
	6827,
	10923 };

//用于解编码的真实值
static int static_15_8_code_id_true[429] =
{
	255,
	383,
	639,
	1151,
	2033,
	1017,
	509,
	447,
	703,
	1215,
	2239,
	1529,
	765,
	831,
	1343,
	2367,
	2553,
	1277,
	1599,
	2623,
	4041,
	2301,
	2019,
	2021,
	2025,
	1011,
	1013,
	507,
	479,
	735,
	1247,
	2271,
	1785,
	893,
	863,
	1375,
	2399,
	2809,
	1405,
	1631,
	2655,
	4703,
	2429,
	3043,
	3045,
	3049,
	1523,
	1525,
	763,
	927,
	1439,
	2463,
	3321,
	1661,
	1695,
	2719,
	4767,
	2685,
	3231,
	5093,
	4733,
	2547,
	2549,
	1275,
	1823,
	2847,
	3987,
	3197,
	3359,
	3989,
	4005,
	3993,
	4009,
	2299,
	1991,
	1995,
	2003,
	1997,
	2005,
	2009,
	999,
	1003,
	1005,
	503,
	495,
	751,
	1263,
	2287,
	1913,
	957,
	879,
	1391,
	2415,
	2937,
	1469,
	1647,
	2671,
	4719,
	2493,
	3183,
	3557,
	3561,
	1779,
	1781,
	891,
	943,
	1455,
	2479,
	3449,
	1725,
	1711,
	2735,
	4783,
	2749,
	3247,
	5295,
	4797,
	2803,
	2805,
	1403,
	1839,
	2863,
	4911,
	3261,
	3375,
	5423,
	5309,
	4851,
	4853,
	2427,
	3015,
	3019,
	3027,
	3021,
	3029,
	3033,
	1511,
	1515,
	1517,
	759,
	975,
	1487,
	2511,
	3705,
	1853,
	1743,
	2767,
	4815,
	2877,
	3279,
	5327,
	4925,
	3315,
	3317,
	1659,
	1871,
	2895,
	4943,
	3389,
	3407,
	5455,
	5437,
	5363,
	5365,
	2683,
	3663,
	5067,
	5075,
	5069,
	5077,
	4731,
	2535,
	2539,
	2541,
	1271,
	1935,
	2959,
	3879,
	3645,
	3471,
	3883,
	3915,
	3891,
	3923,
	3195,
	3727,
	3885,
	3917,
	3893,
	3925,
	3941,
	3897,
	3929,
	3945,
	2295,
	1943,
	1959,
	1947,
	1963,
	1971,
	1949,
	1965,
	1973,
	1977,
	983,
	987,
	989,
	887,
	1399,
	2423,
	3001,
	1501,
	1655,
	2679,
	4727,
	2525,
	3191,
	3813,
	3817,
	1907,
	1909,
	955,
	951,
	1463,
	2487,
	3513,
	1757,
	1719,
	2743,
	4791,
	2781,
	3255,
	5303,
	4829,
	2931,
	2933,
	1467,
	1847,
	2871,
	4919,
	3293,
	3383,
	5431,
	5341,
	4979,
	4981,
	2491,
	3527,
	3531,
	3539,
	3533,
	3541,
	3545,
	1767,
	1771,
	1773,
	1495,
	2519,
	3769,
	1885,
	1751,
	2775,
	4823,
	2909,
	3287,
	5335,
	4957,
	3443,
	3445,
	1723,
	1879,
	2903,
	4951,
	3421,
	3415,
	5463,
	5469,
	5491,
	5493,
	2747,
	3671,
	5579,
	5587,
	5581,
	5589,
	4795,
	2791,
	2795,
	2797,
	2967,
	5015,
	3677,
	3479,
	5527,
	5725,
	5939,
	5971,
	3259,
	3735,
	5783,
	5965,
	5941,
	5973,
	5307,
	4839,
	4843,
	4845,
	2983,
	2971,
	2987,
	2995,
	2973,
	2989,
	2997,
	1499,
	3303,
	5351,
	5021,
	3699,
	3701,
	1851,
	1895,
	2919,
	4967,
	3485,
	3431,
	5479,
	5533,
	5747,
	5749,
	2875,
	3687,
	5735,
	6557,
	6605,
	6613,
	4923,
	3307,
	3309,
	5031,
	3741,
	3495,
	5543,
	5789,
	6567,
	6773,
	3387,
	3751,
	5799,
	6813,
	6823,
	7509,
	5435,
	5355,
	5357,
	5019,
	5035,
	5043,
	5037,
	5045,
	2523,
	3643,
	3675,
	3739,
	3691,
	3755,
	3787,
	3763,
	3795,
	3693,
	3757,
	3789,
	3765,
	3797,
	3801,
	1883,
	1899,
	1901,
	1755,
	2779,
	4827,
	2925,
	3291,
	5339,
	4973,
	3507,
	3509,
	2907,
	4955,
	3437,
	3419,
	5467,
	5485,
	5555,
	5557,
	5723,
	5843,
	5837,
	5845,
	2923,
	3483,
	5531,
	5741,
	6555,
	6581,
	5787,
	6765,
	6811,
	6997,
	4971,
	3499,
	3501,
	3435,
	5483,
	5549,
	5811,
	5813,
	5739,
	6573,
	6763,
	6869,
	5547,
	5805,
	6571,
	6837,
	5803,
	6829,
	6827,
	10923
};

//用与剔除标尺与定向棒上编码点的ID
static int static_scalebar_orident_ID[9] =
{
	20,
	21,
	22,
	14,
	8,
	19,
	18,
	26,
	32
};

//
static int* GetAutoOridentBarID(int& array_size/*=0*/)
{
	array_size = 9;
	return &static_scalebar_orident_ID[0];
}
#endif